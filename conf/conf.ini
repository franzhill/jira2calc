; =============================================================================
; Fichier de configuration de base (configuration par défaut)
;
; Il est possible de redéfinir ("surcharger", "override") les paramètres présents ici :
; les mettre dans un fichier de conf autre (ex: conf.perso.ini) , puis lors du chargement de la configuration
; avec la classe Configuration, préciser ce fichier de conf annexe :
;    conf = Configuration(conf.ini, conf.perso.ini)
; (voir conf.py)
; Il est ainsi aussi possible d'avoir plusieurs fichiers de conf qui se "superposent".
;
;
; Note d'architecture : il a été choisi d'utiliser le format .ini plutôt que le format .yaml
; (plus pratique) car Python 3.3.5 ne dispose pas en standard de la librairie yaml. Cela aurait donc
; nécéssité une install de lib supplémentaire, ce que l'on essaie de limiter étant donné le contexte
; pétri de restrictions dans lequel ce projet évolue.
;
; Les fichiers de conf sont parsés, au final, par ConfigPaser : https://docs.python.org/3/library/configparser.html
; Pour ce qui est de la conversion de types, lire la section 14.2.2 Supported Datatypes.
; Notamment :
;   "(...) config parsers provide a range of handy getter methods to handle integers, floats and booleans.
;    (...) config parsers also provide getboolean(). This method is case-insensitive and recognizes
;     Boolean values from 'yes'/'no', 'on'/'off', 'true'/'false' and '1'/'0'. For example:
;         config['mysection'].getboolean('mykey')
;   "
;
; =============================================================================


[run]
; true|false. Mettre à true lorsqu'on veut utiliser le debugger de PyCharm.
; En effet le debugger marche mal avec certaines opérations de import_oo_libs
; ce switch permet de les bypasser.
; Selon l'environnement d'exécution de ce programme, il faudra sans doute retoucher
; les valeurs de 'bypass' mises dans import_oo_libs
DEBUG                = false




[jira]

REST_BASE_URL        = http://localhost:8080/rest/api/2/
REST_USERNAME        = fhill
REST_PASSWORD        = fhi


BROWSER_BASE_URL     = http://localhost:8080/browse/

; Lors des appels pour aller chercher les issues JIRA : aller chercher les X premières.
; Valeurs : entier positif. Indiquer -1 si on les veut toutes
; La valeur réellement utilisée sera le multiple de MAX_NB_ISSUES_PER_REQUEST supérieur le plus proche
MAX_NB_ISSUES        = -1

; Lors des appels pour aller chercher les issues JIRA : paramètre technique: aller
; chercher les issues par "lots" (ou "pages") de X nb d'issues à la fois (1 lot = 1 requête Rest)
; Si ce paramètre est supérieur à ce qui la valeur définie par l'administrateur Jira
; (propriété JIRA 'jira.search.views.default.max' Cf https://docs.atlassian.com/jira/REST/server/#api/2/search-searchcette )
; alors cette dernière fera foi. Par défaut elle est = 50
MAX_NB_ISSUES_PER_REQUEST = 50

ISSUE_TYPE_COMMANDE      = Commande
ISSUE_TYPE_PAIEMENT      = Paiement

[path]

;Full path of the python executable provided with LibreOffice
;PATH_TO_OO_PYTHON         = C:\\Program Files (x86)\\LibreOffice 4\\program\\python.exe
PATH_TO_OO_PYTHON         = C:\Program Files (x86)\LibreOffice 4\program\python.exe
;Path to the directory containing the uno library provided with LibreOffice
PATH_TO_UNO               = C:\Program Files (x86)\LibreOffice 4\program
;Path to the directory containing the pyoo library (NOT provided by LibreOffice)
PATH_TO_PYOO              = C:\Python33\Lib\site-packages
;
PATH_TO_OO_SOFFICE        = C:\Program Files (x86)\LibreOffice 4\program\soffice



[oo]

SERVER_HOST = localhost
SERVER_PORT = 3000

;Nom de l'onglet dans lequel aller insérer les issues extraites de JIRA
WRITE_ISSUES_IN_SHEET = Données_Jira
;0 pour avoir l'onglet en 1ère position, 1 pour l'avoir en 2è ... -1 pour l'avoir à la fin
ISSUE_SHEET_POSITION = 0

; Champs JIRA à écrire dans CALC
; Les champs (colonnes) seront écrits dans les lignes CAlC dans l'ordre fourni ici.
; Format : Json (liste).
; Les identifiants donnés doivent correspondre aux attributs de l'objet JiraIssue
WRITE_ISSUES_FIELDS   = [ "type"                  ,
                          "domaine"               ,
                          "fonction"              ,
                          "axe"                   ,
                          "centre"                ,
                          "bureau"                ,
                          "nom"                   ,
                          "nom_du_projet"         ,
                          "summary"               ,
                          "status"                ,
                          "marche"                ,
                          "montant"               ,
                          "key"                   ,
                          "parent_key"            ,
                          "sort_idx"              ,
                          "browsable_url"         ,
                         ]
; Trier les lignes (issues Jira) selon le champ suivant
SORT_ISSUES_ON_FIELD  = sort_idx
; ... et selon cet ordre (ASC ou DESC)
SORT_ISSUES_DIRECTION = ASC


; Pour l'effacement des données Jira (juste avant de réécrire les nouvelles données) : définit l'étendue à effacer :
ERASE_UP_TO_COL       = 24
ERASE_UP_TO_ROW       = 999



[db]

DBNAME                = db_name
USER                  = db_user
; Laisser vide si pas de mdp requis
PASSWORD              =
HOST                  = 10.xx.xxx.xx
; Laisser vide si port par défaut
PORT                  =
; Laisser vide si schema par défaut
SCHEMA                = public


; Tables du "Data Warehouse" (aka "Puits")
; (où l'on insère les issues directement depuis Jira)
DW_COMMANDE_TABLE_NAME = dw_commande
DW_PAIEMENT_TABLE_NAME = dw_paiement



; Tables du "Data Store"
; (où l'on insère les issues depuis le Data Warehouse)
DS_ISSUE_TABLE_NAME      = ds_issue
DS_COMMANDE_TABLE_NAME   = ds_commande

; Générer la table des issues à chaque import ?
; Valeurs : true|false
; Attention, si la table des issues est regénérée à chaque import, toutes les données préalablement présentes seront perdues
ISSUE_TABLE_CREATE  = true

; Supprimer toutes les issues préalablement en base avant de faire l'insertion ?
; (dans le cas contraire, il y aura "collision" car le mécanisme général ne prévoit pas pour l'instant de faire un diff
;  entre les issues présentes dans JIRA et celles déjà en base => le plus simple est donc de faire un import complet à
; chaque fois, ce qui demande donc de vider la table des issues préalablement)
; Valeurs : true|false
DELETE_ALL_BEFORE_IMPORT = true


